<link
    href="https://cdn.jsdelivr.net/npm/prismjs@1.29.0/themes/prism-tomorrow.min.css"
    rel="stylesheet"
/>
<script src="https://cdn.jsdelivr.net/npm/prismjs@1.29.0/prism.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/prismjs@1.29.0/plugins/autoloader/prism-autoloader.min.js"></script>

<style> 
.wp_blog_theme {
  --primary: #E58C32;
  --secondary: #f8c291;
  --light-bg: #fef9f4;
  --text-dark: #2d2d2d;
  --tab-radius: 12px;
  --shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
  --code-bg: #001f3f;
  --code-text: #d4f1ff;
}

.wp_blog_container {
  font-family: 'Segoe UI', sans-serif;
  background: var(--light-bg);
  margin: 0;
  padding: 0;
  color: var(--text-dark);
}

/* Heading */
.wp_blog_main-heading {
  text-align: center;
  font-size: 2.4rem;
  color: var(--primary);
  margin-top: 2.5rem;
  font-weight: bold;
}

/* Explanation Card */
.wp_blog_explanation,
.wp_blog_code-tabs-container {
  max-width: 940px;
  margin: 2rem auto;
  padding: 2rem;
  background: white;
  border-radius: var(--tab-radius);
  box-shadow: var(--shadow);
}

/* Text and Visuals */
.wp_blog_explanation h2{
  font-size: 1.4rem;
  color: var(--primary);
  margin-bottom: 0.5rem;
}
.wp_blog_explanation h5{
  color: var(--primary);
}

.wp_blog_explanation p,
.wp_blog_explanation li {
  font-size: 1.05rem;
  line-height: 1.7;
  margin: 0.5rem 0;
}
.wp_blog_explanation code {
  background: #f9cea6;
  color: #2d2d2d;
  padding: 3px 6px;
  border-radius: 4px;
  font-family: 'Courier New', monospace;
}
.wp_blog_explanation img {
  max-width: 100%;
  border-radius: var(--tab-radius);
  margin-top: 1rem;
  box-shadow: 0 2px 12px rgba(0,0,0,0.06);
}

/* Tab Buttons */
.wp_blog_code-tabs-header {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-bottom: 1rem;
}
.wp_blog_code-tab-button {
  padding: 0.6rem 1.2rem;
  border: 1px solid var(--primary);
  background: white;
  color: var(--primary);
  border-radius: 50px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
}
.wp_blog_code-tab-button:hover {
  background: var(--secondary);
}
.wp_blog_code-tab-button.active {
  background: var(--primary);
  color: white;
}

/* Code Content */
.wp_blog_code-tab-content {
  display: none;
  background: var(--code-bg);
  border-radius: var(--tab-radius);
}
.wp_blog_code-tab-content.active {
  display: block;
}
.wp_blog_code-tab-content pre {
  margin: 0;
  padding: 1.5rem;
  font-size: 1rem;
  overflow-x: auto;
  background: var(--code-bg);
  border-radius: var(--tab-radius);
  color: var(--code-text);
}
</style>

<div class="wp_blog_container wp_blog_theme"> 
    <h1 class="wp_blog_main-heading"></h1>
    <div class="wp_blog_explanation">
        <h2>Problem Statement:</h2>

        <p>Write a function that reverses a string. The input string is given as an array of characters <code>s</code>. You must do this by modifying the input array in-place with <code>O(1)</code>extra memory.</p>

                <h2>Examples:</h2>

                <h5>Example 1:</h5>
                <p><strong>Input:</strong>s = ["h","e","l","l","o"]</p>
                <p><strong>Output:</strong>["o","l","l","e","h"]</p>

                <h5>Example 2:</h5>
                <p><strong>Input:</strong>s = ["H","a","n","n","a","h"]</p>
                <p><strong>Output:</strong>["h","a","n","n","a","H"]</p>
                <p>
                  <code>Explanation:</code> 
                   The first 5 elements should be any order of [0,1,4,0,3].
                </p>

                <h2>Approach: Two Pointer Technique</h2>
                <ul>
                    <li>Initialize two pointers, one at the start and one at the end of the array.</li>
                    <li>Swap the characters at both pointers.</li>
                    <li>Move the pointers towards the center until they meet.</li>
                </ul>

                <h2>Time Complexity:</h2>
                <li>
                  <p><strong>Time Complexity = O(n)</strong>
                </li>
                <h2>Space Complexity:</h2>
                <li>
                  <p><strong>Space Complexity = O(1)</strong></p>
                </li>

                <h2>Dry Run</h2>
                  <div style="background: #f9f9f9; border-left: 4px solid var(--primary); padding: 1rem; border-radius: var(--tab-radius); margin: 1rem 0;">
                      <p><strong>Input:</strong> <code>s = ["h", "e", "l", "l", "o"]</code></p>
                      <pre style="white-space: pre-wrap; background: #fff5ea; padding: 1rem; border-radius: 8px; overflow-x: auto;">
                  len = 5, halfLen = 2
                    
                    i = 0 → swap s[0] and s[4] → ["o", "e", "l", "l", "h"]

                    i = 1 → swap s[1] and s[3] → ["o", "l", "l", "e", "h"]
                      </pre>
                      <p><strong>Output:</strong> <code>Result: ["o", "l", "l", "e", "h"]</code></p>
                  </div>
                
        <h2>Visualisation:</h2>
        <img src="https://namastedev.com/blog/wp-content/uploads/2025/06/Screenshot-2025-06-25-at-10.57.03 PM.png" alt="Remove duplicates" />
    </div>

    <div class="wp_blog_code-tabs-container">
        <div class="wp_blog_code-tabs-header">
            <button class="wp_blog_code-tab-button active" data-lang="js">JavaScript</button>
            <button class="wp_blog_code-tab-button" data-lang="py">Python</button>
            <button class="wp_blog_code-tab-button" data-lang="java">Java</button>
            <button class="wp_blog_code-tab-button" data-lang="cpp">C++</button>
            <button class="wp_blog_code-tab-button" data-lang="c">C</button>
            <button class="wp_blog_code-tab-button" data-lang="cs">C#</button>
        </div>

        <!-- JavaScript -->
        <div class="wp_blog_code-tab-content active" data-lang="js">
            <pre><code class="language-javascript">
var reverseString = function(s) {
    let len = s.length;
    let halfLen = Math.floor(len / 2);

    for (let i = 0; i < halfLen; i++) {
        let temp = s[i];
        s[i] = s[len - i - 1];
        s[len - i - 1] = temp;
    }
};
         </code></pre>
        </div>

        <!-- Python -->
        <div class="wp_blog_code-tab-content" data-lang="py">
            <pre><code class="language-python">
class Solution(object):
    def reverseString(self, s):
        left, right = 0, len(s) - 1
        while left < right:
            s[left], s[right] = s[right], s[left]
            left += 1
            right -= 1
            </code></pre>
        </div>

        <!-- Java -->
        <div class="wp_blog_code-tab-content" data-lang="java">
            <pre><code class="language-java">
public class Solution {
    public void reverseString(char[] s) {
        int left = 0, right = s.length - 1;
        while (left < right) {
            char temp = s[left];
            s[left] = s[right];
            s[right] = temp;
            left++;
            right--;
        }
    }
}           </code></pre>
        </div>

        <!-- C++ -->
        <div class="wp_blog_code-tab-content" data-lang="cpp">
            <pre><code class="language-cpp">
class Solution {
public:
    void reverseString(vector<char>& s) {
        int left = 0, right = s.size() - 1;
        while (left < right) {
            swap(s[left], s[right]);
            left++;
            right--;
        }
    }
};     </code></pre>
        </div>

        <!-- C -->
        <div class="wp_blog_code-tab-content" data-lang="c">
            <pre><code class="language-c">
void reverseString(char* s, int sSize) {
    int left = 0, right = sSize - 1;
    while (left < right) {
        char temp = s[left];
        s[left] = s[right];
        s[right] = temp;
        left++;
        right--;
    }
}
            </code></pre>
        </div>

        <!-- C# -->
        <div class="wp_blog_code-tab-content" data-lang="cs">
            <pre><code class="language-csharp">
public class Solution {
    public void ReverseString(char[] s) {
        int left = 0, right = s.Length - 1;
        while (left < right) {
            char temp = s[left];
            s[left] = s[right];
            s[right] = temp;
            left++;
            right--;
        }
    }
}          </code></pre>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const buttons = document.querySelectorAll(".wp_blog_code-tab-button");
        const contents = document.querySelectorAll(".wp_blog_code-tab-content");

        buttons.forEach((button) => {
            button.addEventListener("click", () => {
                const lang = button.getAttribute("data-lang");

                buttons.forEach((btn) => btn.classList.remove("active"));
                contents.forEach((content) =>
                    content.classList.remove("active")
                );

                button.classList.add("active");
                document
                    .querySelector(`.wp_blog_code-tab-content[data-lang="${lang}"]`)
                    .classList.add("active");
            });
        });
    });
</script>